
`include "define.v"
module InstMem(
    input wire clk,
    input wire ce,
    input wire [31:0] addr,
    output reg [31:0] data
);
    reg [31:0] instmem [1023 : 0];    
    always@(*)      
        if(ce == `RomDisable)
          data = `Zero;
        else
          data = instmem[addr[11 : 2]];   
    initial
		begin
//sc ll
		  
			//ori r1=0x0000
			instmem[0] = 32'h34010000;
			//ori r2=0x1234
			instmem[1] = 32'h34021234;
			//sw r1 -> 0
			instmem[2] = 32'hAC220000;
			//ori r2=0x5678
			instmem[3] = 32'h34025678;
			//sc r2 -> 0  r2 = 1'b0
			instmem[4] = 32'hE0220000;
			//lw 0 -> r2
			instmem[5] = 32'h8C220000;

			//ori r3=0x0000
			instmem[6] = 32'h34030000;
			//ll 0 -> r3
			instmem[7] = 32'hC0230000;
			//addi r3 + 1
			instmem[8] = 32'h20630001;
			//sc r3 -> 0  r3=1'b1
			instmem[9] = 32'hE0230000;
			//lw 0 -> r3
			instmem[10] = 32'h8C230000;

			//ori r4 = 0xf
			instmem[11] = 32'h3404000f;
			//mtc0 r4 -> compare
			instmem[12] = 32'h40845800;
			//lui r4 = 0x10000000
			instmem[13] = 32'h3C041000;
			//ori r4 = 0x10000401
			instmem[14] = 32'h34840401;
			//mtc0 r4 -> status
			instmem[15] = 32'h40846000;
			//mfc0 status -> r5
			instmem[16] = 32'h40056000;
			
			
			*/
			
			/*
			
			//syscall -> 16 +  eret
			
			instmem[0] = 32'h3401ffff;
			instmem[1] = 32'h3402ffff;
			instmem[2] = 32'h3403ffff;
			instmem[3] = 32'h3404ffff;
			
			instmem[4] = 32'h0000000c;
			
			instmem[5] = 32'h3405ffff;
			instmem[6] = 32'h3406ffff;

			
			instmem[16] = 32'h340affff;
			instmem[17] = 32'h340bffff;
			instmem[18] = 32'b01000010000000000000000000011000;
			
			*/
			
			//eret -> 20 + eret
			
			//ori r4 = 0xa
			instmem[1] = 32'h3404000a;
			//mtc0 r4 -> compare
			instmem[2] = 32'h40845800;
			
			instmem[3] = 32'h3401ffff;
			instmem[4] = 32'h3402ffff;
			instmem[5] = 32'h3403ffff;
			instmem[6] = 32'h3404ffff;
			instmem[7] = 32'h3405ffff;
			instmem[8] = 32'h3406ffff;
			instmem[9] = 32'h3407ffff;
			instmem[10] = 32'h3408ffff;
			instmem[11] = 32'h3409ffff;
			
			instmem[20] = 32'h340affff;
			instmem[21] = 32'h340bffff;
			instmem[22] = 32'b01000010000000000000000000011000;
		/*  
		  /*
		  //1.sw[15:0] -> led[15:0]  2.sw[3:0] -> seg[7:0]
		  		  
		  //ori r0 = 32'h00000000
		  instmem[0] = 32'h34000000;
		  //lui r1 = 32'h70000000
		  instmem[1] = 32'h3C017000;
		  //lw sw -> r2
		  instmem[2] = 32'h8C220008;
		  //sw r2 -> led
		  instmem[3] = 32'hAC220004;
		  //sw r2 -> reg
		  instmem[4] = 32'hAC220000;
		  // j 2
		  instmem[5] = 32'h08000002;
		  */
		  
		  
		  //2. led Á÷Ë®
		  
		  //ori r0 = 32'h00000000
		  instmem[0] = 32'h34000000;
		  //lui r1 = 32'h70000000
		  instmem[1] = 32'h3C017000;
		  //lw sw -> r2
		  instmem[2] = 32'h8C220008;
		  //r2 -> r3
		  instmem[3] = 32'h00021826;
		  //r2 -> r4
		  instmem[4] = 32'h00022026;
		  //sw r2 -> led
		  instmem[5] = 32'hAC220004;
		  
		  //lw sw -> r2
		  instmem[6] = 32'h8C220008;
		  //beq r2 r3 -> 9
		  instmem[7] = 32'h10430001;
		  //j 3
		  instmem[8] = 32'h08000003;
		  //andi r5 = r3 & 0x0001
		  instmem[9] = 32'h30650001;
		  //beq r5 r0 -> 16
		  instmem[10] = 32'h10050005;
		 
		  //andi r5 = r4 & 0x8000
		  instmem[11] = 32'h30858000;
		  //sll r4
          instmem[12] = 32'h00042040;
          //beq r5 r0 -> 12
          instmem[13] = 32'h10050001;
          //ori r4 0001
          instmem[14] = 32'h34840001;
          //j 20
          instmem[15] = 32'h08000014;
          
          //andi r5 = r4 & 0x0001
		  instmem[16] = 32'h30850001;
          //srl r4
          instmem[17] = 32'h00042042;
          //beq r5 r0 -> 19
          instmem[18] = 32'h10050001;
          //ori r4 8000
          instmem[19] = 32'h34848000;
          //sw r4 -> led
		  instmem[20] = 32'hAC240004;
		  
		  //lui r7 & 0x0000 
		  instmem[21] = 32'h3C070000;
		  //lui r8 0x0001
		  instmem[22] = 32'h3C08000a;
		  //addi r7 1
		  instmem[23] = 32'h20E70001;
		  //beq r7 r8
		  instmem[24] = 32'h10E80001;
		  //j 23
		  instmem[25] = 32'h08000017;
		  
          // j 6
		  instmem[26] = 32'h08000006;
		  
		  
		  /*
		  
		  //3.interrupt
		  //ori r1 = 32'h00000000
		  instmem[0] = 32'h34010000;
		  //lui r2 = 32'h00f00000
		  instmem[1] = 32'h3C02000a;
		  //ori r3 = 32'h00000000
		  instmem[2] = 32'h34030000;
		  //lui r4 = 32'h00f00000
		  instmem[3] = 32'h3C04000a;
		  //lui r5 = 32'h70000000
		  instmem[4] = 32'h3C057000;
		  //sw r1 -> seg
		  instmem[5] = 32'hACA10000;
		  //mtc0 r2 -> compare
		  instmem[6] = 32'h40825800;
		  
		  //addi r1 + 1
		  instmem[7] = 32'h20210001;
		  //add r2 + r4 -> r2
		  instmem[8] = 32'h00441020;
		  //mtc0 r2 -> compare
		  instmem[9] = 32'h40825800;
		  //sw r1 -> seg
		  instmem[10] = 32'hACA10000;
		  //j 10
		  instmem[11] = 32'h0800000a;
		  */
*/
		end
endmodule

